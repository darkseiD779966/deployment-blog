trigger:
  branches:
    include:
      - main
  paths:
    include:
      - backend-blog/**

variables:
  IMAGE_NAME: backend-blog
  DOCKERFILE_PATH: backend-blog/Dockerfile
  PORT: 3000  MANIFEST_PATH: k8s-specifications/backend-blog-deployment.yaml

stages:
- stage: Build
  displayName: Build and Push Docker Image
  jobs:
    - job: BuildImage
      displayName: Build Docker Image
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - checkout: self
        - task: Docker@2
          displayName: Build and Push Docker Image
          inputs:
            containerRegistry: 'lm-docker-con'
            command: buildAndPush
            repository: $(IMAGE_NAME)
            dockerfile: $(DOCKERFILE_PATH)
            tags: $(Build.BuildId)
        - script: |
            echo "##vso[task.setvariable variable=BuildId;isOutput=true]$(Build.BuildId)"
          name: SetBuildId
          displayName: Set Build ID Output Variable

- stage: Update
  displayName: Update Kubernetes Manifest
  dependsOn: Build
  variables:
    BuildId: $[ stageDependencies.Build.BuildImage.outputs['SetBuildId.BuildId'] ]
  jobs:  
    - job: Update
      displayName: Update
      steps:
        - task: ShellScript@2
          inputs:
            scriptPath: 'scripts/updateK8sManifests.sh'
            args: 'ad-aggregator $(IMAGE_NAME) $(BuildId)'

- stage: Deploy
  displayName: Deploy to Kubernetes
  dependsOn: Update
  jobs:
    - job: Deploy
      displayName: Deploy Application
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        # Fetch the latest repository including the updated manifest
        - checkout: self
          displayName: Checkout Updated Repository
          
        # Optionally verify that the updated manifest is present in the repository
        - script: |
            echo "Checking updated manifest file content:"
            cat $(MANIFEST_PATH)
          displayName: Verify Updated Manifest

        # Deploy the updated manifest to Kubernetes using the KubernetesManifest task
        - task: KubernetesManifest@1
          displayName: Deploy to Kubernetes
          inputs:
            action: 'deploy'
            connectionType: 'kubernetesServiceConnection'
            kubernetesServiceConnection: 'lm-con'
            namespace: 'default'
            manifests: '$(MANIFEST_PATH)'
            force: true
